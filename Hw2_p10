module ff_delayed #(
    parameter WIDTH = 4
)(
    input logic clk, rst,
    input logic [WIDTH-1:0] data_i,
    output logic [WIDTH-1:0] data_o
);

logic [WIDTH-1:0] data_d1, data_q1;
logic [WIDTH-1:0] data_d2, data_q2;
logic [WIDTH-1:0] data_d3, data_q3;

// First D-flip-flop
always_comb begin : data_set1
    data_d1 = data_i;
end

always_ff @(posedge clk or posedge rst) begin : data_ff1
    if (rst) begin
        data_q1 <= '0;
    end else begin
        data_q1 <= data_d1;
    end
end

// Second D-flip-flop
always_ff @(posedge clk or posedge rst) begin : data_ff2
    if (rst) begin
        data_q2 <= '0;
    end else begin
        data_q2 <= data_q1;
    end
end

// Third D-flip-flop (output)
always_ff @(posedge clk or posedge rst) begin : data_ff3
    if (rst) begin
        data_q3 <= '0;
    end else begin
        data_q3 <= data_q2;
    end
end

assign data_o = data_q3;

endmodule
